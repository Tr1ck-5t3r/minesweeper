[{"E:\\minesweeper\\minesweeper\\src\\index.js":"1","E:\\minesweeper\\minesweeper\\src\\App.js":"2","E:\\minesweeper\\minesweeper\\src\\Components\\Navbar.js":"3","E:\\minesweeper\\minesweeper\\src\\Components\\Description.js":"4","E:\\minesweeper\\minesweeper\\src\\Components\\Footer.js":"5","E:\\minesweeper\\minesweeper\\src\\Components\\Game-components\\Board.js":"6","E:\\minesweeper\\minesweeper\\src\\Components\\Utils\\CreateBoard.js":"7","E:\\minesweeper\\minesweeper\\src\\Components\\Game-components\\Cell.js":"8","E:\\minesweeper\\minesweeper\\src\\Components\\Utils\\Reveal.js":"9"},{"size":645,"mtime":1683051861648,"results":"10","hashOfConfig":"11"},{"size":243,"mtime":1682248777507,"results":"12","hashOfConfig":"11"},{"size":557,"mtime":1683781481146,"results":"13","hashOfConfig":"11"},{"size":1068,"mtime":1683196225364,"results":"14","hashOfConfig":"11"},{"size":2699,"mtime":1683171154713,"results":"15","hashOfConfig":"11"},{"size":5530,"mtime":1683187055806,"results":"16","hashOfConfig":"11"},{"size":2786,"mtime":1683181090756,"results":"17","hashOfConfig":"11"},{"size":1453,"mtime":1683781892501,"results":"18","hashOfConfig":"11"},{"size":3669,"mtime":1683181050847,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sfui3d",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\minesweeper\\minesweeper\\src\\index.js",[],[],"E:\\minesweeper\\minesweeper\\src\\App.js",[],[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Navbar.js",[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Description.js",[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Footer.js",[],[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Game-components\\Board.js",["50"],[],"import React,{useState,useEffect} from 'react';\r\nimport CreateBoard from '../Utils/CreateBoard';\r\nimport { revealed } from \"../Utils/Reveal\";\r\nimport Cell from './Cell';\r\nimport { toast,ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction Board() {\r\n    const[nonminesClicked,updateNonMinesClicked]=useState(0);\r\n    const[no_mines,updateMines]=useState(20); \r\n    const [grid,setGrid]=useState([]);\r\n    const [nonMinecount,setNonMinecount]=useState(0);\r\n    const [mineLocation,setmineLocation]=useState([]);\r\n    const style={\r\n        display : 'flex',\r\n        flexDirection : 'row',\r\n    }\r\n    useEffect(()=>{\r\n        freshBoard();\r\n    },[]);\r\n    const counternonmines = () =>\r\n    {\r\n        let c=0;\r\n        for (let i=0;i<10;i++)\r\n        {\r\n            for (let j = 0; j < 10; j++) \r\n            {\r\n                if (grid[i][j].value!==\"X\" && grid[i][j].revealed===true)\r\n                {\r\n                    c++;\r\n                }\r\n            }\r\n        }\r\n        return c;\r\n    }\r\n    const updateNumberOfMines = event => {\r\n        updateMines(event.target.value)\r\n        const newBoard=CreateBoard(10,10,no_mines);\r\n        setNonMinecount(10*10-no_mines);\r\n        setmineLocation(newBoard.mineLocation);\r\n        setGrid(newBoard.board);\r\n        updateNonMinesClicked(counternonmines());\r\n    }  \r\n    // Making freshboard atstart\r\n    const freshBoard = () => {\r\n        const newBoard=CreateBoard(10,10,no_mines);\r\n        setNonMinecount(10*10-20);\r\n        setmineLocation(newBoard.mineLocation);\r\n        setGrid(newBoard.board);\r\n    }\r\n\r\n    const updateFlag=(e,x,y)=>{\r\n        e.preventDefault();\r\n        // deep copy of the object\r\n        let newGrid=JSON.parse(JSON.stringify(grid));\r\n        newGrid[x][y].flagged=true;\r\n        console.log(newGrid[x][y]);\r\n        setGrid(newGrid);\r\n        updateNonMinesClicked(counternonmines());\r\n    }\r\n    const newfresh=()=>{\r\n        freshBoard();\r\n        updateNonMinesClicked(counternonmines());\r\n    }\r\n    const revealcell=(x,y)=>{\r\n        let newGrid=JSON.parse(JSON.stringify(grid));\r\n        if(newGrid[x][y].value===\"X\"){\r\n            toast.dark(' Clicked on Mine ,Try Again', { position: \"top-center\", autoClose: 1000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\r\n            for(let i=0;i<mineLocation.length;i++){\r\n                newGrid[mineLocation[i][0]][mineLocation[i][1]].revealed=true;\r\n            }\r\n            setGrid(newGrid);\r\n            setTimeout(newfresh,500);\r\n        }\r\n        if((10*10 - nonminesClicked-no_mines)===0){\r\n            toast.success('Wohoo!!,You won',{ position: \"top-center\", autoClose: 1000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\r\n            setTimeout(newfresh,1500);\r\n        }\r\n        else{\r\n            let revealedboard=revealed(newGrid,x,y,nonMinecount);\r\n            setGrid(revealedboard.arr);\r\n            setNonMinecount(revealedboard.newNonMines);\r\n            updateNonMinesClicked(counternonmines());\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"parent\" style={{minwidth:'700px',padding:'20px',border: '1px solid rgba(98, 130, 158, 0.557)',borderRadius:'15px'}}>\r\n            <div className='game-window' style={{display:'flex',}}>\r\n              <div className='game'>\r\n                  {/* <h3 style={{color:'white',textAlign:'center',fontSize:'30px',margin:'0px'}}>Non-Mines - {nonMinecount}</h3> */}\r\n                  <ToastContainer></ToastContainer>\r\n                  {grid.map((singlerow,index1)=>{\r\n                      return (\r\n                          <div style={style} key={index1}>\r\n                              {singlerow.map((singlecol,index2)=>{\r\n                              return  <Cell details={singlecol} key={index2} updateFlag={updateFlag} revealcell={revealcell}/>\r\n                              })}\r\n                              \r\n                          </div>\r\n                      )\r\n                  })}\r\n                </div>\r\n                <div style={{display:'flex',flexDirection:\"column\",justifyContent:'center',alignContent:'center',minWidth:'400px',color:'white',padding:\"30px\"}}>\r\n                    <div>\r\n                        <h1 style={{fontSize:'40px'}}>Minesweeper</h1>\r\n                        <h2 style={{fontSize:'20px',marginTop:'30px'}}>Total size: 10 X 10</h2>\r\n                        <h2 style={{fontSize:'20px',marginTop:'30px'}}>Number of mines: {no_mines}</h2>\r\n                        <h2 style={{fontSize:'20px',marginTop:'30px'}}>Number of non mines: {10*10 - no_mines}</h2>\r\n                        <h2 style={{fontSize:'20px',marginTop:'30px'}}>Number of non mines left : {10*10 - nonminesClicked-no_mines}</h2>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h2  style={{fontSize:'20px',marginTop:'30px'}}>Set no of mines: </h2>\r\n                        <div style={{display:'flex',justifyContent:'space-evenly'}}>\r\n                            <input id='no-mines' default=\"10\" name=\"mines-value\" onChange={updateNumberOfMines} value={no_mines} type='number' max={\"100\"} min={\"2\"} style={{height:'30px',width:'100px',alignItems:'center'}}/>\r\n                        </div>                        \r\n                    </div> \r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n      </div>\r\n    ) \r\n}\r\nexport default Board;","E:\\minesweeper\\minesweeper\\src\\Components\\Utils\\CreateBoard.js",[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Game-components\\Cell.js",[],[],"E:\\minesweeper\\minesweeper\\src\\Components\\Utils\\Reveal.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":19,"column":7,"nodeType":"53","endLine":19,"endColumn":9,"suggestions":"54"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'freshBoard'. Either include it or remove the dependency array.","ArrayExpression",["55"],{"desc":"56","fix":"57"},"Update the dependencies array to be: [freshBoard]",{"range":"58","text":"59"},[693,695],"[freshBoard]"]