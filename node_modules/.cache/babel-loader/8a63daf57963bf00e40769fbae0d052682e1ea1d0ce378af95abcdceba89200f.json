{"ast":null,"code":"export const revealed = (arr, x, y, newNonMines) => {\n  // all the cells which are adjaced to zero must be stored in the array \n  // so that it can be revealed later \n\n  let show = [];\n  show.push(arr[x][y]);\n  while (show.length !== 0) {\n    let one = show.pop();\n    let i = one.x;\n    let j = one.y;\n    if (!one.revealed) {\n      newNonMines--;\n      one.revealed = true;\n    }\n    if (one.value !== 0) {\n      break;\n    }\n\n    // top left \n\n    if (i > 0 && j > 0 && arr[i - 1][j - 1].value === 0 && !arr[i - 1][j - 1].revealed) {\n      show.push(arr[i - 1][j - 1]);\n    }\n\n    // bottom right\n\n    if (i < arr.length - 1 && j < arr[0].length - 1 && arr[i + 1][j + 1].value === 0 && !arr[i + 1][j + 1].revealed) {\n      show.push(arr[i + 1][j + 1]);\n    }\n\n    // top right\n\n    if (i > 0 && j < arr[0].length - 1 && arr[i - 1][j + 1].value === 0 && !arr[i - 1][j + 1].revealed) {\n      show.push(arr[i - 1][j + 1]);\n    }\n\n    // bottom left \n\n    if (i < arr.length - 1 && j > 0 && arr[i + 1][j - 1].value === 0 && !arr[i + 1][j - 1].revealed) {\n      show.push(arr[i + 1][j - 1]);\n    }\n\n    // top \n    if (i > 0 && arr[i - 1][j].value === 0 && !arr[i - 1][j].revealed) {\n      show.push(arr[i - 1][j]);\n    }\n\n    // right\n\n    if (j < arr[0].length - 1 && arr[i][j + 1].value === 0 && !arr[i][j + 1].revealed) {\n      show.push(arr[i][j + 1]);\n    }\n\n    // bottom\n\n    if (i < arr.length - 1 && arr[i + 1][j].value === 0 && !arr[i + 1][j].revealed) {\n      show.push(arr[i + 1][j]);\n    }\n\n    // left\n\n    if (j > 0 && arr[i][j - 1].value === 0 && !arr[i][j - 1].revealed) {\n      show.push(arr[i][j - 1]);\n    }\n\n    // start revealing the item\n\n    if (i > 0 && j > 0 && !arr[i - 1][j - 1].revealed) {\n      arr[i - 1][j - 1].revealed = true;\n      newNonMines--;\n    }\n    if (j > 0 && !arr[i][j - 1].revealed) {\n      // Left Reveal\n      arr[i][j - 1].revealed = true;\n      newNonMines--;\n    }\n    if (i < arr.length - 1 && j > 0 && !arr[i + 1][j - 1].revealed) {\n      //Bottom Left Reveal\n      arr[i + 1][j - 1].revealed = true;\n      newNonMines--;\n    }\n    if (i > 0 && !arr[i - 1][j].revealed) {\n      //Top Reveal\n      arr[i - 1][j].revealed = true;\n      newNonMines--;\n    }\n    if (i < arr.length - 1 && !arr[i + 1][j].revealed) {\n      // Bottom Reveal\n      arr[i + 1][j].revealed = true;\n      newNonMines--;\n    }\n    if (i > 0 && j < arr[0].length - 1 && !arr[i - 1][j + 1].revealed) {\n      // Top Right Reveal\n      arr[i - 1][j + 1].revealed = true;\n      newNonMines--;\n    }\n    if (j < arr[0].length - 1 && !arr[i][j + 1].revealed) {\n      //Right Reveal\n      arr[i][j + 1].revealed = true;\n      newNonMines--;\n    }\n    if (i < arr.length - 1 && j < arr[0].length - 1 && !arr[i + 1][j + 1].revealed) {\n      // Bottom Right Reveal\n      arr[i + 1][j + 1].revealed = true;\n      newNonMines--;\n    }\n  }\n  return {\n    arr,\n    newNonMines\n  };\n};","map":{"version":3,"names":["revealed","arr","x","y","newNonMines","show","push","length","one","pop","i","j","value"],"sources":["E:/minesweeper/minesweeper/src/Components/Utils/Reveal.js"],"sourcesContent":["export const revealed=(arr,x,y,newNonMines)=>{\r\n    \r\n  // all the cells which are adjaced to zero must be stored in the array \r\n  // so that it can be revealed later \r\n\r\n  let show=[];\r\n  show.push(arr[x][y]);\r\n  while(show.length!==0){\r\n      let one=show.pop();\r\n      let i=one.x;\r\n      let j=one.y;\r\n      if(!one.revealed){\r\n          newNonMines--;\r\n          one.revealed=true;\r\n      }\r\n      if(one.value !==0){\r\n          break;\r\n      }\r\n\r\n      // top left \r\n\r\n      if(\r\n          i>0 && \r\n          j>0 &&\r\n          arr[i-1][j-1].value===0 &&\r\n          !arr[i-1][j-1].revealed\r\n      )\r\n      {\r\n          show.push(arr[i-1][j-1]);\r\n      }\r\n\r\n      // bottom right\r\n\r\n      if(\r\n          i<arr.length-1 &&\r\n          j<arr[0].length-1 &&\r\n          arr[i+1][j+1].value===0 &&\r\n          !arr[i+1][j+1].revealed\r\n      ){\r\n          show.push(arr[i+1][j+1]);\r\n      }\r\n\r\n      // top right\r\n\r\n      if(\r\n          i>0 &&\r\n          j<arr[0].length-1 &&\r\n          arr[i-1][j+1].value===0 &&\r\n          !arr[i-1][j+1].revealed\r\n      ){\r\n          show.push(arr[i-1][j+1]);\r\n      }\r\n\r\n      // bottom left \r\n\r\n      if(\r\n          i<arr.length-1 &&\r\n          j>0 &&\r\n          arr[i+1][j-1].value===0 &&\r\n          !arr[i+1][j-1].revealed\r\n      ){\r\n          show.push(arr[i+1][j-1]);\r\n      }\r\n\r\n      // top \r\n      if(\r\n          i>0 &&\r\n          arr[i-1][j].value===0 &&\r\n          !arr[i-1][j].revealed \r\n      ){\r\n          show.push(arr[i-1][j]);\r\n      }\r\n\r\n      // right\r\n\r\n      if(\r\n          j<arr[0].length-1 &&\r\n          arr[i][j+1].value===0 &&\r\n          !arr[i][j+1].revealed\r\n      ){\r\n          show.push(arr[i][j+1]);\r\n      }\r\n\r\n      // bottom\r\n\r\n      if(\r\n          i<arr.length-1 &&\r\n          arr[i+1][j].value===0 &&\r\n          !arr[i+1][j].revealed\r\n      ){\r\n          show.push(arr[i+1][j]);\r\n      }\r\n\r\n      // left\r\n\r\n      if(\r\n          j>0 &&\r\n          arr[i][j-1].value===0 &&\r\n          !arr[i][j-1].revealed\r\n      ){\r\n          show.push(arr[i][j-1]);\r\n      }\r\n\r\n\r\n      // start revealing the item\r\n\r\n      if (i > 0 && j > 0 && !arr[i - 1][j - 1].revealed) {\r\n        arr[i - 1][j - 1].revealed = true;\r\n        newNonMines--;\r\n      }\r\n      if (j > 0 && !arr[i][j - 1].revealed) {\r\n          // Left Reveal\r\n          arr[i][j - 1].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (\r\n          i < arr.length - 1 &&\r\n          j > 0 &&\r\n          !arr[i + 1][j - 1].revealed\r\n        ) {\r\n          //Bottom Left Reveal\r\n          arr[i + 1][j - 1].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (i > 0 && !arr[i - 1][j].revealed) {\r\n          //Top Reveal\r\n          arr[i - 1][j].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (i < arr.length - 1 && !arr[i + 1][j].revealed) {\r\n          // Bottom Reveal\r\n          arr[i + 1][j].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (\r\n          i > 0 &&\r\n          j < arr[0].length - 1 &&\r\n          !arr[i - 1][j + 1].revealed\r\n        ) {\r\n          // Top Right Reveal\r\n          arr[i - 1][j + 1].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (j < arr[0].length - 1 && !arr[i][j + 1].revealed) {\r\n          //Right Reveal\r\n          arr[i][j + 1].revealed = true;\r\n          newNonMines--;\r\n        }\r\n    \r\n        if (\r\n          i < arr.length - 1 &&\r\n          j < arr[0].length - 1 &&\r\n          !arr[i + 1][j + 1].revealed\r\n        ) {\r\n          // Bottom Right Reveal\r\n          arr[i + 1][j + 1].revealed = true;\r\n          newNonMines--;\r\n        }\r\n  }\r\n\r\n  return {arr,newNonMines}\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}